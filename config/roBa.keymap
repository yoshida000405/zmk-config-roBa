#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &mt LANG1 L   &mt LANGUAGE_2 U  &kp COMMA         &kp PERIOD                                                    &kp F        &kp W  &kp R  &kp Y  &kp P
&kp E             &kp I         &kp A             &kp O             &mt UNDERSCORE MINUS  &kp LS(LG(S))      &mt PIPE SLASH       &kp K        &kp T  &kp N  &kp S  &kp H
&kp LEFT_SHIFT    &kp Z         &kp X             &lt 4 C           &lt 3 V               &mkp RCLK          &mt COLON SEMICOLON  &lt 2 G      &kp D  &kp M  &kp J  &kp B
&kp LEFT_COMMAND  &kp LEFT_WIN  &kp LEFT_ALT      &kp LEFT_CONTROL  &kp LEFT_COMMAND      &mkp LCLK          &kp BACKSPACE        &lt 1 ENTER                       &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION_NUM {
            bindings = <
&trans                  &trans                      &trans                         &trans                          &trans                                              &kp F1     &kp F2  &kp F3  &kp F4   &kp F5
&mt EXCL NUMBER_1       &mt DOUBLE_QUOTES NUMBER_2  &mt HASH NUMBER_3              &mt DOLLAR NUMBER_4             &mt PERCENT NUMBER_5  &trans         &kp F6         &kp F7     &kp F8  &kp F9  &kp F10  &kp F11
&mt AMPERSAND NUMBER_6  &mt SINGLE_QUOTE NUMBER_7   &mt LEFT_PARENTHESIS NUMBER_8  &mt RIGHT_PARENTHESIS NUMBER_9  &kp NUMBER_0          &trans         &trans         &trans     &trans  &trans  &trans   &kp F12
&trans                  &trans                      &trans                         &kp LEFT_CONTROL                &kp LEFT_COMMAND      &mkp LCLK      &kp BACKSPACE  &kp ENTER                           &kp F13
            >;
        };

        SIGN {
            bindings = <
&trans     &trans     &trans    &trans            &trans                                                     &trans            &trans             &trans            &trans             &trans
&kp SLASH  &kp MINUS  &kp PLUS  &kp EQUAL         &kp ASTERISK      &trans                    &kp TILDE      &kp CARET         &kp AT             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans     &trans     &trans    &trans            &kp GRAVE         &kp NON_US_BACKSLASH      &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
&trans     &trans     &trans    &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mkp LCLK                 &kp BACKSPACE  &kp ENTER                                                                 &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans          &trans        &trans            &trans                                          &trans          &kp UP_ARROW    &trans           &trans  &trans
&kp HOME    &trans          &trans        &trans            &kp END           &trans         &trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp TAB     &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans            &trans         &trans         &trans          &trans          &trans           &trans  &trans
&trans      &trans          &trans        &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mkp LCLK      &kp BACKSPACE  &kp ENTER                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
